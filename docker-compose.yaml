version: '3.9'

services:
  # Postgres
  postgres:
    image: postgres:17
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - '5432:5432'
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - backend

  # Redis
  redis:
    image: redis:7
    restart: always
    ports:
      - '6379:6379'
    networks:
      - backend

  # Backend API instances
  api1:
    build:
      context: .
      dockerfile: apps/server/Dockerfile
    restart: always
    env_file:
      - .env
    depends_on:
      - postgres
      - redis
    networks:
      - backend
    expose:
      - '3000'

  api2:
    build:
      context: .
      dockerfile: apps/server/Dockerfile
    restart: always
    env_file:
      - .env
    depends_on:
      - postgres
      - redis
    networks:
      - backend
    expose:
      - '3000'

  # NGINX load balancer for backend APIs
  api_lb:
    image: nginx:stable-alpine
    depends_on:
      - api1
      - api2
    ports:
      - '3000:80' # Expose LB on host port 3000
    volumes:
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - backend

  # Frontend instances
  frontend1:
    build:
      context: .
      dockerfile: apps/client/Dockerfile
    restart: always
    env_file:
      - .env
    ports:
      - '8080:80'
    depends_on:
      - api_lb
    networks:
      - frontend

  frontend2:
    build:
      context: .
      dockerfile: apps/client/Dockerfile
    restart: always
    env_file:
      - .env
    ports:
      - '8081:80'
    depends_on:
      - api_lb
    networks:
      - frontend

volumes:
  pgdata:

networks:
  backend:
  frontend:
